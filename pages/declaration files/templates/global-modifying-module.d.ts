// Type definitions for [~НАЗВАНИЕ БИБЛИОТЕКИ~] [~НЕОБЯЗАТЕЛЬНЫЙ НОМЕР ВЕРСИИ~]
// Project: [~НАЗВАНИЕ ПРОЕКТА~]
// Definitions by: [~ВАШЕ ИМЯ~] <[~ВАШ АДРЕС В ИНТЕРНЕТЕ~]>

/*~ Это шаблон модуля, изменяющего глобальные переменные. Его нужно переименовать в index.d.ts
 *~ и поместить в папку с тем же именем, что и имя модуля.
 *~ Например, если вы создаете файл для "super-greeter", то этот файл
 *~ должен называться "super-greeter/index.d.ts"
 */

/*~ Замечание: если данный модуль может вызываться как функция или конструироваться,
 *~ то вам нужно объединить написанное здесь с тем, что находится в шаблонах
 *~ module-class или module-function
 */

declare global {
  /*~ Здесь объявите то, что будет находиться в глобальном пространстве имен,
   *~ или дополнять существующие в глобальном пространстве имен объявления
   */
	interface String {
		fancyFormat(opts: StringFormatOptions): string;
	}
}

/*~ Если модуль экспортирует типы или значения, запишите их как обычно */
export interface StringFormatOptions {
	fancinessLevel: number;
}

/*~ Для примера: объявление метода модуля (вдобавок к его воздействию на
 *~ глобальную область видимости)
 */
export function doSomething(): void;

/*~ Если модуль ничего не экспортирует, то понадобится эта строка. Иначе удалите ее */
export {};
